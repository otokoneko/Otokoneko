// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: dmzj.message.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Dmzj {

  /// <summary>Holder for reflection information generated from dmzj.message.proto</summary>
  public static partial class DmzjMessageReflection {

    #region Descriptor
    /// <summary>File descriptor for dmzj.message.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static DmzjMessageReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChJkbXpqLm1lc3NhZ2UucHJvdG8SBGRtemoiUAoTTWFuZ2FEZXRhaWxSZXNw",
            "b25zZRINCgVFcnJubxgBIAEoBRIOCgZFcnJtc2cYAiABKAkSGgoFTWFuZ2EY",
            "AyABKAsyCy5kbXpqLk1hbmdhIq0CCgVNYW5nYRIKCgJJZBgBIAEoBRINCgVU",
            "aXRsZRgCIAEoCRINCgVDb3ZlchgGIAEoCRISCgpEZXNjcml0aW9uGAcgASgJ",
            "EhYKDkxhc3RVcGRhdGVUaW1lGAggASgDEh0KFUxhc3RVcGRhdGVDaGFwdGVy",
            "TmFtZRgJIAEoCRITCgtGaXJzdExldHRlchgLIAEoCRIOCgZQaW55aW4YDCAB",
            "KAkSGwoTTGFzdFVwZGF0ZUNoYXB0ZXJJZBgSIAEoCRIWCgNUYWcYEyADKAsy",
            "CS5kbXpqLlRhZxIZCgZTdGF0dXMYFCADKAsyCS5kbXpqLlRhZxIcCgZBdXRo",
            "b3IYFSADKAsyDC5kbXpqLkF1dGhvchIcCgZWb2x1bWUYFyADKAsyDC5kbXpq",
            "LlZvbHVtZSIfCgNUYWcSCgoCSWQYASABKAUSDAoETmFtZRgCIAEoCSIiCgZB",
            "dXRob3ISCgoCSWQYASABKAUSDAoETmFtZRgCIAEoCSI2CgZWb2x1bWUSDAoE",
            "TmFtZRgBIAEoCRIeCgdDaGFwdGVyGAIgAygLMg0uZG16ai5DaGFwdGVyIjIK",
            "B0NoYXB0ZXISCgoCSWQYASABKAUSDAoETmFtZRgCIAEoCRINCgVPcmRlchgF",
            "IAEoBWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Dmzj.MangaDetailResponse), global::Dmzj.MangaDetailResponse.Parser, new[]{ "Errno", "Errmsg", "Manga" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Dmzj.Manga), global::Dmzj.Manga.Parser, new[]{ "Id", "Title", "Cover", "Descrition", "LastUpdateTime", "LastUpdateChapterName", "FirstLetter", "Pinyin", "LastUpdateChapterId", "Tag", "Status", "Author", "Volume" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Dmzj.Tag), global::Dmzj.Tag.Parser, new[]{ "Id", "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Dmzj.Author), global::Dmzj.Author.Parser, new[]{ "Id", "Name" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Dmzj.Volume), global::Dmzj.Volume.Parser, new[]{ "Name", "Chapter" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Dmzj.Chapter), global::Dmzj.Chapter.Parser, new[]{ "Id", "Name", "Order" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class MangaDetailResponse : pb::IMessage<MangaDetailResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MangaDetailResponse> _parser = new pb::MessageParser<MangaDetailResponse>(() => new MangaDetailResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MangaDetailResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Dmzj.DmzjMessageReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MangaDetailResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MangaDetailResponse(MangaDetailResponse other) : this() {
      errno_ = other.errno_;
      errmsg_ = other.errmsg_;
      manga_ = other.manga_ != null ? other.manga_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MangaDetailResponse Clone() {
      return new MangaDetailResponse(this);
    }

    /// <summary>Field number for the "Errno" field.</summary>
    public const int ErrnoFieldNumber = 1;
    private int errno_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Errno {
      get { return errno_; }
      set {
        errno_ = value;
      }
    }

    /// <summary>Field number for the "Errmsg" field.</summary>
    public const int ErrmsgFieldNumber = 2;
    private string errmsg_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Errmsg {
      get { return errmsg_; }
      set {
        errmsg_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Manga" field.</summary>
    public const int MangaFieldNumber = 3;
    private global::Dmzj.Manga manga_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Dmzj.Manga Manga {
      get { return manga_; }
      set {
        manga_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MangaDetailResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MangaDetailResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Errno != other.Errno) return false;
      if (Errmsg != other.Errmsg) return false;
      if (!object.Equals(Manga, other.Manga)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Errno != 0) hash ^= Errno.GetHashCode();
      if (Errmsg.Length != 0) hash ^= Errmsg.GetHashCode();
      if (manga_ != null) hash ^= Manga.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Errno != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Errno);
      }
      if (Errmsg.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Errmsg);
      }
      if (manga_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Manga);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Errno != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Errno);
      }
      if (Errmsg.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Errmsg);
      }
      if (manga_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Manga);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Errno != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Errno);
      }
      if (Errmsg.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Errmsg);
      }
      if (manga_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Manga);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MangaDetailResponse other) {
      if (other == null) {
        return;
      }
      if (other.Errno != 0) {
        Errno = other.Errno;
      }
      if (other.Errmsg.Length != 0) {
        Errmsg = other.Errmsg;
      }
      if (other.manga_ != null) {
        if (manga_ == null) {
          Manga = new global::Dmzj.Manga();
        }
        Manga.MergeFrom(other.Manga);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Errno = input.ReadInt32();
            break;
          }
          case 18: {
            Errmsg = input.ReadString();
            break;
          }
          case 26: {
            if (manga_ == null) {
              Manga = new global::Dmzj.Manga();
            }
            input.ReadMessage(Manga);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Errno = input.ReadInt32();
            break;
          }
          case 18: {
            Errmsg = input.ReadString();
            break;
          }
          case 26: {
            if (manga_ == null) {
              Manga = new global::Dmzj.Manga();
            }
            input.ReadMessage(Manga);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Manga : pb::IMessage<Manga>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Manga> _parser = new pb::MessageParser<Manga>(() => new Manga());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Manga> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Dmzj.DmzjMessageReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Manga() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Manga(Manga other) : this() {
      id_ = other.id_;
      title_ = other.title_;
      cover_ = other.cover_;
      descrition_ = other.descrition_;
      lastUpdateTime_ = other.lastUpdateTime_;
      lastUpdateChapterName_ = other.lastUpdateChapterName_;
      firstLetter_ = other.firstLetter_;
      pinyin_ = other.pinyin_;
      lastUpdateChapterId_ = other.lastUpdateChapterId_;
      tag_ = other.tag_.Clone();
      status_ = other.status_.Clone();
      author_ = other.author_.Clone();
      volume_ = other.volume_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Manga Clone() {
      return new Manga(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "Title" field.</summary>
    public const int TitleFieldNumber = 2;
    private string title_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Cover" field.</summary>
    public const int CoverFieldNumber = 6;
    private string cover_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Cover {
      get { return cover_; }
      set {
        cover_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Descrition" field.</summary>
    public const int DescritionFieldNumber = 7;
    private string descrition_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Descrition {
      get { return descrition_; }
      set {
        descrition_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "LastUpdateTime" field.</summary>
    public const int LastUpdateTimeFieldNumber = 8;
    private long lastUpdateTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long LastUpdateTime {
      get { return lastUpdateTime_; }
      set {
        lastUpdateTime_ = value;
      }
    }

    /// <summary>Field number for the "LastUpdateChapterName" field.</summary>
    public const int LastUpdateChapterNameFieldNumber = 9;
    private string lastUpdateChapterName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LastUpdateChapterName {
      get { return lastUpdateChapterName_; }
      set {
        lastUpdateChapterName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "FirstLetter" field.</summary>
    public const int FirstLetterFieldNumber = 11;
    private string firstLetter_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FirstLetter {
      get { return firstLetter_; }
      set {
        firstLetter_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Pinyin" field.</summary>
    public const int PinyinFieldNumber = 12;
    private string pinyin_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Pinyin {
      get { return pinyin_; }
      set {
        pinyin_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "LastUpdateChapterId" field.</summary>
    public const int LastUpdateChapterIdFieldNumber = 18;
    private string lastUpdateChapterId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LastUpdateChapterId {
      get { return lastUpdateChapterId_; }
      set {
        lastUpdateChapterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Tag" field.</summary>
    public const int TagFieldNumber = 19;
    private static readonly pb::FieldCodec<global::Dmzj.Tag> _repeated_tag_codec
        = pb::FieldCodec.ForMessage(154, global::Dmzj.Tag.Parser);
    private readonly pbc::RepeatedField<global::Dmzj.Tag> tag_ = new pbc::RepeatedField<global::Dmzj.Tag>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Dmzj.Tag> Tag {
      get { return tag_; }
    }

    /// <summary>Field number for the "Status" field.</summary>
    public const int StatusFieldNumber = 20;
    private static readonly pb::FieldCodec<global::Dmzj.Tag> _repeated_status_codec
        = pb::FieldCodec.ForMessage(162, global::Dmzj.Tag.Parser);
    private readonly pbc::RepeatedField<global::Dmzj.Tag> status_ = new pbc::RepeatedField<global::Dmzj.Tag>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Dmzj.Tag> Status {
      get { return status_; }
    }

    /// <summary>Field number for the "Author" field.</summary>
    public const int AuthorFieldNumber = 21;
    private static readonly pb::FieldCodec<global::Dmzj.Author> _repeated_author_codec
        = pb::FieldCodec.ForMessage(170, global::Dmzj.Author.Parser);
    private readonly pbc::RepeatedField<global::Dmzj.Author> author_ = new pbc::RepeatedField<global::Dmzj.Author>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Dmzj.Author> Author {
      get { return author_; }
    }

    /// <summary>Field number for the "Volume" field.</summary>
    public const int VolumeFieldNumber = 23;
    private static readonly pb::FieldCodec<global::Dmzj.Volume> _repeated_volume_codec
        = pb::FieldCodec.ForMessage(186, global::Dmzj.Volume.Parser);
    private readonly pbc::RepeatedField<global::Dmzj.Volume> volume_ = new pbc::RepeatedField<global::Dmzj.Volume>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Dmzj.Volume> Volume {
      get { return volume_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Manga);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Manga other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Title != other.Title) return false;
      if (Cover != other.Cover) return false;
      if (Descrition != other.Descrition) return false;
      if (LastUpdateTime != other.LastUpdateTime) return false;
      if (LastUpdateChapterName != other.LastUpdateChapterName) return false;
      if (FirstLetter != other.FirstLetter) return false;
      if (Pinyin != other.Pinyin) return false;
      if (LastUpdateChapterId != other.LastUpdateChapterId) return false;
      if(!tag_.Equals(other.tag_)) return false;
      if(!status_.Equals(other.status_)) return false;
      if(!author_.Equals(other.author_)) return false;
      if(!volume_.Equals(other.volume_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Title.Length != 0) hash ^= Title.GetHashCode();
      if (Cover.Length != 0) hash ^= Cover.GetHashCode();
      if (Descrition.Length != 0) hash ^= Descrition.GetHashCode();
      if (LastUpdateTime != 0L) hash ^= LastUpdateTime.GetHashCode();
      if (LastUpdateChapterName.Length != 0) hash ^= LastUpdateChapterName.GetHashCode();
      if (FirstLetter.Length != 0) hash ^= FirstLetter.GetHashCode();
      if (Pinyin.Length != 0) hash ^= Pinyin.GetHashCode();
      if (LastUpdateChapterId.Length != 0) hash ^= LastUpdateChapterId.GetHashCode();
      hash ^= tag_.GetHashCode();
      hash ^= status_.GetHashCode();
      hash ^= author_.GetHashCode();
      hash ^= volume_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Title.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Title);
      }
      if (Cover.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Cover);
      }
      if (Descrition.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Descrition);
      }
      if (LastUpdateTime != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(LastUpdateTime);
      }
      if (LastUpdateChapterName.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(LastUpdateChapterName);
      }
      if (FirstLetter.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(FirstLetter);
      }
      if (Pinyin.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(Pinyin);
      }
      if (LastUpdateChapterId.Length != 0) {
        output.WriteRawTag(146, 1);
        output.WriteString(LastUpdateChapterId);
      }
      tag_.WriteTo(output, _repeated_tag_codec);
      status_.WriteTo(output, _repeated_status_codec);
      author_.WriteTo(output, _repeated_author_codec);
      volume_.WriteTo(output, _repeated_volume_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Title.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Title);
      }
      if (Cover.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Cover);
      }
      if (Descrition.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Descrition);
      }
      if (LastUpdateTime != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(LastUpdateTime);
      }
      if (LastUpdateChapterName.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(LastUpdateChapterName);
      }
      if (FirstLetter.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(FirstLetter);
      }
      if (Pinyin.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(Pinyin);
      }
      if (LastUpdateChapterId.Length != 0) {
        output.WriteRawTag(146, 1);
        output.WriteString(LastUpdateChapterId);
      }
      tag_.WriteTo(ref output, _repeated_tag_codec);
      status_.WriteTo(ref output, _repeated_status_codec);
      author_.WriteTo(ref output, _repeated_author_codec);
      volume_.WriteTo(ref output, _repeated_volume_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Title.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (Cover.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Cover);
      }
      if (Descrition.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Descrition);
      }
      if (LastUpdateTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(LastUpdateTime);
      }
      if (LastUpdateChapterName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LastUpdateChapterName);
      }
      if (FirstLetter.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FirstLetter);
      }
      if (Pinyin.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Pinyin);
      }
      if (LastUpdateChapterId.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(LastUpdateChapterId);
      }
      size += tag_.CalculateSize(_repeated_tag_codec);
      size += status_.CalculateSize(_repeated_status_codec);
      size += author_.CalculateSize(_repeated_author_codec);
      size += volume_.CalculateSize(_repeated_volume_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Manga other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Title.Length != 0) {
        Title = other.Title;
      }
      if (other.Cover.Length != 0) {
        Cover = other.Cover;
      }
      if (other.Descrition.Length != 0) {
        Descrition = other.Descrition;
      }
      if (other.LastUpdateTime != 0L) {
        LastUpdateTime = other.LastUpdateTime;
      }
      if (other.LastUpdateChapterName.Length != 0) {
        LastUpdateChapterName = other.LastUpdateChapterName;
      }
      if (other.FirstLetter.Length != 0) {
        FirstLetter = other.FirstLetter;
      }
      if (other.Pinyin.Length != 0) {
        Pinyin = other.Pinyin;
      }
      if (other.LastUpdateChapterId.Length != 0) {
        LastUpdateChapterId = other.LastUpdateChapterId;
      }
      tag_.Add(other.tag_);
      status_.Add(other.status_);
      author_.Add(other.author_);
      volume_.Add(other.volume_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Title = input.ReadString();
            break;
          }
          case 50: {
            Cover = input.ReadString();
            break;
          }
          case 58: {
            Descrition = input.ReadString();
            break;
          }
          case 64: {
            LastUpdateTime = input.ReadInt64();
            break;
          }
          case 74: {
            LastUpdateChapterName = input.ReadString();
            break;
          }
          case 90: {
            FirstLetter = input.ReadString();
            break;
          }
          case 98: {
            Pinyin = input.ReadString();
            break;
          }
          case 146: {
            LastUpdateChapterId = input.ReadString();
            break;
          }
          case 154: {
            tag_.AddEntriesFrom(input, _repeated_tag_codec);
            break;
          }
          case 162: {
            status_.AddEntriesFrom(input, _repeated_status_codec);
            break;
          }
          case 170: {
            author_.AddEntriesFrom(input, _repeated_author_codec);
            break;
          }
          case 186: {
            volume_.AddEntriesFrom(input, _repeated_volume_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Title = input.ReadString();
            break;
          }
          case 50: {
            Cover = input.ReadString();
            break;
          }
          case 58: {
            Descrition = input.ReadString();
            break;
          }
          case 64: {
            LastUpdateTime = input.ReadInt64();
            break;
          }
          case 74: {
            LastUpdateChapterName = input.ReadString();
            break;
          }
          case 90: {
            FirstLetter = input.ReadString();
            break;
          }
          case 98: {
            Pinyin = input.ReadString();
            break;
          }
          case 146: {
            LastUpdateChapterId = input.ReadString();
            break;
          }
          case 154: {
            tag_.AddEntriesFrom(ref input, _repeated_tag_codec);
            break;
          }
          case 162: {
            status_.AddEntriesFrom(ref input, _repeated_status_codec);
            break;
          }
          case 170: {
            author_.AddEntriesFrom(ref input, _repeated_author_codec);
            break;
          }
          case 186: {
            volume_.AddEntriesFrom(ref input, _repeated_volume_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Tag : pb::IMessage<Tag>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Tag> _parser = new pb::MessageParser<Tag>(() => new Tag());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Tag> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Dmzj.DmzjMessageReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Tag() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Tag(Tag other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Tag Clone() {
      return new Tag(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Tag);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Tag other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Tag other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Author : pb::IMessage<Author>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Author> _parser = new pb::MessageParser<Author>(() => new Author());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Author> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Dmzj.DmzjMessageReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Author() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Author(Author other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Author Clone() {
      return new Author(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Author);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Author other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Author other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Volume : pb::IMessage<Volume>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Volume> _parser = new pb::MessageParser<Volume>(() => new Volume());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Volume> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Dmzj.DmzjMessageReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Volume() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Volume(Volume other) : this() {
      name_ = other.name_;
      chapter_ = other.chapter_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Volume Clone() {
      return new Volume(this);
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Chapter" field.</summary>
    public const int ChapterFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Dmzj.Chapter> _repeated_chapter_codec
        = pb::FieldCodec.ForMessage(18, global::Dmzj.Chapter.Parser);
    private readonly pbc::RepeatedField<global::Dmzj.Chapter> chapter_ = new pbc::RepeatedField<global::Dmzj.Chapter>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Dmzj.Chapter> Chapter {
      get { return chapter_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Volume);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Volume other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if(!chapter_.Equals(other.chapter_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      hash ^= chapter_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      chapter_.WriteTo(output, _repeated_chapter_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      chapter_.WriteTo(ref output, _repeated_chapter_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      size += chapter_.CalculateSize(_repeated_chapter_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Volume other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      chapter_.Add(other.chapter_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            chapter_.AddEntriesFrom(input, _repeated_chapter_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            chapter_.AddEntriesFrom(ref input, _repeated_chapter_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Chapter : pb::IMessage<Chapter>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Chapter> _parser = new pb::MessageParser<Chapter>(() => new Chapter());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Chapter> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Dmzj.DmzjMessageReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Chapter() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Chapter(Chapter other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      order_ = other.order_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Chapter Clone() {
      return new Chapter(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Order" field.</summary>
    public const int OrderFieldNumber = 5;
    private int order_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Order {
      get { return order_; }
      set {
        order_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Chapter);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Chapter other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (Order != other.Order) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Order != 0) hash ^= Order.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Order != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Order);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Order != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Order);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Order != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Order);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Chapter other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Order != 0) {
        Order = other.Order;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 40: {
            Order = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 40: {
            Order = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
